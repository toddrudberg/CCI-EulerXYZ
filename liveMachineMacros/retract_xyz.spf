;USED TO RETRACT ALONG THE TOOL AXIS SYSTEM A SMALL DISTANCE
PROC RETRACT_XYZ ;DISPLOF

DEF REAL RETRACT_DIST=100.0
DEF REAL F_RETRACT=16000.0
DEF REAL DIST_FROM_BASE=0.0
DEF REAL POS_Z1=0.0
DEF REAL XY_SCALAR=0.0
DEF REAL Z_CEILING=600.0 ;TARGET HEIGHT OF RETRACT
DEF REAL Z_SAFE=550.0 ;SAFE Z HEIGHT FOR NORMAL ROBOT TRANSIT
DEF REAL Z_ZERO=0.0
DEF REAL Z_MAX
DEF REAL RAD_AT_CEILING=1200.0
DEF REAL RAD_AT_ZERO=1900.0
DEF REAL CALCD_X=0.0
DEF REAL CALCD_Y=0.0
DEF INT INITWOFF=0

;TRANSFORM MUST BE ACTIVE FOR CALCULATIONS TO BE CORRECT
TRAORI
STOPRE
HEAD_OFFSETS(0)
STOPRE

;CHECK IF ROBOT IS ALREADY IN A RETRACTED POSITION, SKIP IF IT IS



IF $AA_IB[Z] >= Z_SAFE
    GOTOF LAST_MOVE ;GO TO THE FINAL MOVEMENT COMMAND TO ENSURE TCP ORIENTATION
ENDIF
STOPRE

;BEGINNING OF RETRACT MACRO
;RECORD AND SWITCH INITIAL SETTINGS
INITWOFF=$P_GG[8]
G500


;REMOVE ROTATOR FROM TRANSFORM IF NEEDED
IF $MC_TRAFO_AXES_IN_1[9] <> 0
    ROTX_TRAFO(0)
ENDIF
STOPRE

F=F_RETRACT
TOFRAME ;ENABLES A FRAME ABOUT THE CURRENT TOOL OFFSET
STOPRE
CP G1 Z=$AA_IW[Z]+RETRACT_DIST ;RETRACT SPECIFIED DISTANCE ALONG THE CURRENT NORMAL
STOPRE
PTP
TOROTOF ;DISABLE TOOL FRAME AND RETURN TO BCS
STOPRE

;CALCULATE CURRENT DISTANCE FROM ROBOT ORIGIN, EFFECTIVELY THE CURRENT RADIUS
DIST_FROM_BASE=SQRT(POT($AA_IB[X])+POT($AA_IB[Y]))
;DETERMINE THE MAXIMUM Z POSSIBLE FOR CURRENT ROBOT REACH
IF DIST_FROM_BASE < RAD_AT_CEILING
    Z_MAX = Z_CEILING
ELSE
    Z_MAX = ((DIST_FROM_BASE-RAD_AT_ZERO)/(RAD_AT_CEILING-RAD_AT_ZERO))*(Z_CEILING-Z_ZERO)
    ;LINEAR INTERPOLATION OF Z_MAX FOR CURRENT DIST FROM BASE
ENDIF

POS_Z1=(Z_MAX-$AA_IB[Z])/2+$AA_IB[Z] ;FIRST MOVE HALFWAY UP TO THE MAXIMUM Z POSSIBLE

IF POS_Z1 > $AA_IB[Z] ;IF ALREADY HIGHER THAN FIRST MOVE, SKIP TO PREVENT MOVING DOWNWARD IN Z
    IF $AA_IB[Z] <= Z_SAFE ;CAN SKIP INTERMEDIATE MOVE IF ALREADY AT SAFE TRANSIT HEIGHT
        G1 Z=POS_Z1       ;FIRST RETRACT, MAINTAINING THE CURRENT TCP ORIENTATION
    ENDIF
ENDIF

LAST_MOVE: ;ALWAYS RUN THE FINAL MOVEMENT, ENSURING TCP POSITION AND ORIENTATION IS CORRECT

;CALCULATE FINAL RETRACT POSITION
;XY_SCALAR = RATIO OF TARGET RADIUS TO CURRENT RADIUS
;APPLYING RATIO TO CURRENT XY POSITIONS DETERMINES NEW XY VALUES ACHIEVING DESIRED RADIUS, AT THE CURRENT ROBOT ANGLE
;CALCULATE CURRENT DISTANCE FROM ROBOT ORIGIN, EFFECTIVELY THE CURRENT RADIUS
DIST_FROM_BASE=SQRT(POT($AA_IB[X])+POT($AA_IB[Y]))
XY_SCALAR=RAD_AT_CEILING/DIST_FROM_BASE
CALCD_X=($AA_IB[X])*XY_SCALAR ;TARGET X OF TARGET RADIUS
CALCD_Y=($AA_IB[Y])*XY_SCALAR ;TARGET Y OF TARGET RADIUS

;MOVE FROM CURRENT RADIUS TO TARGET RADIUS, @ TARGET Z HEIGHT
G1 X=CALCD_X Y=CALCD_Y Z=Z_CEILING RX=0.0 RY=0.0 RZ=$AA_IB[RZ] F=F_RETRACT
CP
;RESET INITIAL PARAMETERS
IF INITWOFF<>0
    G[8]=INITWOFF
ENDIF

RET
